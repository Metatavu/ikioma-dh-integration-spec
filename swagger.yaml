openapi: 3.0.3
info:
  version: 1.0.0
  title: Ikioma API-spec

security:
  - bearerAuth: []

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/patients:
    post:
      summary:  Creates a patient
      description: Creates a patient
      operationId: createPatient
      tags:
        - Patient
      parameters:
        - name: patientId
          in: query
          required: true
          description: User keycloak ID
          schema:
            type: string
            format: uuid
      requestBody:
        description: A patient to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        "200":
          description: Creation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/patients/{patientId}:
    get:
      summary:  Finds a patient
      description: Finds patient details by patient id
      tags:
        - Patient
      operationId: findPatient
      parameters:
        - name: patientId
          in: path
          required: true
          description: User keycloak ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    head:
      summary:  Finds a patient headers
      description: Finds patient request headers by patient id
      tags:
        - Patient
      parameters:
        - name: patientId
          in: path
          required: true
          description: User keycloak ID
          schema:
            type: string
            format: uuid
      operationId: findPatientHeaders
      responses:
        "200":
          description: Patient status
        "400":
          description: Invalid request was sent to the server
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error
    put:
      summary: updates patient data
      description: updates patient data
      tags:
        - Patient
      operationId: updatePatient
      parameters:
        - name: patientId
          in: path
          required: true
          description: User keycloak ID
          schema:
            type: string
            format: uuid
        - name: allowMarketingMail
          in: query
          required: false
          description: Does the patient want to receive marketing material via mail
          schema:
            type: boolean
        - name: allowTreatmentInstructionsMail
          in: query
          required: false
          description: Does the patient want to receive treatment instructions via mail
          schema:
            type: boolean
        - name: allowBookingSms
          in: query
          required: false
          description: Does the patient want to receive appointment booking confirmation sms
          schema:
            type: boolean
      requestBody:
        description: New patient data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        "200":
          description: Update was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/medicalSpecialities:
    get:
      summary:  Lists medical specialities
      description: Lists medical specialities
      tags:
        - MedicalSpecialities
      operationId: listMedicalSpecialities
      parameters:
        - name: clinicId
          in: query
          required: false
          description: Encrypted clinic ID
          schema:
            type: string
            format: encrypted-id
        - name: employerId
          in: query
          required: false
          description: Encrypted employer ID
          schema:
            type: string
            format: encrypted-id
        - name: practitionerId
          in: query
          required: false
          description: Encrypted practitioner ID
          schema:
            type: string
            format: encrypted-id
      responses:
        "200":
          description: List of medical specialities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalSpecialty'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/practitioners:
    get:
      summary:  Lists practitioners
      description: Lists practitioners
      tags:
        - Practitioners
      operationId: listPractitioners
      parameters:
        - name: areaId
          in: query
          required: false
          description: Encrypted area ID
          schema:
            type: string
            format: encrypted-id
        - name: clinicId
          in: query
          required: false
          description: Encrypted clinic ID
          schema:
            type: string
            format: encrypted-id
        - name: specialtyId
          in: query
          required: false
          description: Encrypted specialty ID
          schema:
            type: string
            format: encrypted-id
        - name: employerId
          in: query
          required: false
          description: Encrypted employer ID
          schema:
            type: string
            format: encrypted-id
        - name: appointmentTimeCodes
          in: query
          required: false
          description: List of appointment work time codes
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: List of practitioners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Practitioner'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/areas:
    get:
      summary:  Lists areas
      description: Lists areas
      tags:
        - Areas
      operationId: listAreas
      parameters:
        - name: employerId
          description: Encrypted employer ID
          in: query
          required: false
          schema:
            type: string
            format: encrypted-id
      responses:
        "200":
          description: List of areas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/clinics:
    get:
      summary:  Lists clinics
      description: Lists clinics
      tags:
        - Clinics
      operationId: listClinics
      parameters:
        - name: employerId
          in: query
          required: false
          description: Employer id if patient is eligible for occupational health care services
          schema:
            type: string
            format: encrypted-id
        - name: areaId
          in: query
          required: false
          description: Encrypted practitioner ID
          schema:
            type: string
            format: encrypted-id
        - name: specialtyId
          in: query
          required: false
          description: Encrypted specialty ID
          schema:
            type: string
            format: encrypted-id
        - name: practitionerId
          in: query
          required: false
          description: Encrypted practitioner ID
          schema:
            type: string
            format: encrypted-id
      responses:
        "200":
          description: List of clinics
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clinic'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/appointments:
    get:
      summary: Lists appointments
      description: Lists appointments
      tags:
        - Appointments
      operationId: listAppointments
      parameters:
        - name: status
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/AppointmentStatus"
        - name: employerId
          in: query
          required: false
          description: Employer id if patient is eligible for occupational health care services
          schema:
            type: string
            format: encrypted-id
        - name: areaId
          in: query
          required: false
          description: Encrypted practitioner ID
          schema:
            type: string
            format: encrypted-id
        - name: clinicId
          in: query
          required: false
          description: Encrypted clinic ID
          schema:
            type: string
            format: encrypted-id
        - name: medicalSpecialtyId
          in: query
          required: false
          description: Encrypted clinic ID
          schema:
            type: string
            format: encrypted-id
        - name: practitionerId
          in: query
          required: false
          description: Encrypted practitioner ID
          schema:
            type: string
            format: encrypted-id
        - name: startTime
          in: query
          required: true
          description: From which date onwards the search is made
          schema:
            type: string
        - name: endTime
          in: query
          required: true
          description: Until which date the search is made
          schema:
            type: string
      responses:
        "200":
          description: List of appointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/appointments/{appointmentId}:
    get:
      summary: Find appointment
      description: Find appointment
      tags:
        - Appointments
      operationId: findAppointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          description: Appointment id
          schema:
            type: string
            format: encrypted-id
      responses:
        "200":
          description: Found appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update appointment
      description: Update appointment
      tags:
        - Appointments
      operationId: updateAppointment
      requestBody:
        description: Request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      parameters:
        - name: appointmentId
          in: path
          required: true
          description: Appointment id
          schema:
            type: string
            format: encrypted-id
        - name: phoneNumber
          in: query
          description: Contact phone number. Used only when updating to RESERVED
          schema:
            type: string
        - name: cancelReason
          in: query
          description: Cancel reason. Required when updating RESERVED to AVAILABLE
          schema:
            type: string
      responses:
        "200":
          description: Found appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/appointments/{appointmentId}/patient:
    post:
      summary: Book patient arrival
      description: Books patient arrivals for selected appointment
      tags:
        - Appointments
      operationId: bookAppointmentArrival
      parameters:
        - name: appointmentId
          in: path
          required: true
          description: Appointment id
          schema:
            type: string
            format: encrypted-id
      responses:
        "200":
          description: Information about attending the appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentArrival'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/prescriptions:
    get:
      summary: Get patients prescriptions
      description: Gets patients prescriptions
      tags:
        - Prescriptions
      operationId: listPrescriptions
      parameters:
        - name: maxResults
          in: query
          required: false
          description: If this is given only the given amount of latest prescriptions are retrieved
          schema:
            type: integer
            format: int32
        - name: startTime
          in: query
          required: false
          description: From which date onwards the search is made. Includes the given date
          schema:
            type: string
        - name: endTime
          in: query
          required: false
          description: Until which date the search is made. Includes the given date
          schema:
            type: string
      responses:
        "200":
          description: Patient prescriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/vaccinations:
    get:
      summary: Get patients vaccinations
      description: Gets patients vaccinations
      tags:
        - Vaccinations
      operationId: listVaccinations
      responses:
        "200":
          description: Patient prescriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vaccination'
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Patient:
      type: object
      description: Patient API object
      required:
        - address
      properties:
        mobile:
          $ref: "#/components/schemas/PhoneNumber"
        telephone:
          $ref: "#/components/schemas/PhoneNumber"
        sms:
          $ref: "#/components/schemas/PhoneNumber"
        address:
          $ref: "#/components/schemas/Address"
        occupation:
          type: string
          description: The occupation of the patient
        domicile:
          type: string
          description: The domicile (home municipality) of the patient
        language:
          $ref: "#/components/schemas/Language"
        employerId:
          type: string
          description: Employer id if patient is eligible for occupational health care services
          format: encrypted-id
        allowsOccupationalInfo:
          type: boolean
          description: True if patient allows showing occupational information
        allowsCommonRegistry:
          type: boolean
          description: True if patient allows showing own medical records

    PhoneNumber:
      type: object
      description: Phone number object which can be used for mobile-, sms- and telephone numbers
      required:
        - areaCode
        - number
      properties:
        areaCode:
          type: string
          description: Area code
        number:
          type: string
          description: Number

    Address:
      type: object
      description: Address object that contains general patient address information
      required:
        - streetAddress
        - postCode
        - postOffice
      properties:
        streetAddress:
          type: string
          description: Users street address
        postCode:
          type: string
          description: Users postal code
        postOffice:
          type: string
          description: Users postal office

    Language:
      type: string
      description: Available languages in ISO 639-1 format
      enum:
        - FI
        - SV

    MedicalSpecialty:
      type: object
      description: Medical specialty object that contains id and localized name
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: encrypted-id
        name:
          $ref: "#/components/schemas/LocalizedValue"

    LocalizedValue:
      type: object
      description: Object that contains localized information
      required:
        - fi
        - sv
        - en
      properties:
        fi:
          type: string
        sv:
          type: string
        en:
          type: string

    Practitioner:
      type: object
      description: Practitioner object that contains id and name
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: encrypted-id
        name:
          type: string
        finnish:
          type: boolean
        swedish:
          type: boolean
        otherLang:
          type: array
          items:
            type: string
        gender:
          type: string

    Area:
      type: object
      description: Area object that contains id and localized name
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: encrypted-id
        name:
          $ref: "#/components/schemas/LocalizedValue"

    Clinic:
      type: object
      description: Clinic object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: encrypted-id
        name:
          $ref: "#/components/schemas/LocalizedValue"
        address:
          $ref: "#/components/schemas/Address"
        phoneNumber:
          type: string
          description: Phone number of the clinic

    Appointment:
      type: object
      description: Appointment API object
      required:
        - id
        - date
        - length
      properties:
        id:
          type: string
          format: encrypted-id
          description: Unique appointment ID
        status:
          $ref: "#/components/schemas/AppointmentStatus"
        specialtyId:
          type: string
          format: encrypted-id
          description: Encrypted specialty ID
        practitionerId:
          type: string
          format: encrypted-id
          description: Encrypted area ID
        clinicId:
          type: string
          format: encrypted-id
          description: Encrypted clinic ID
        date:
          type: string
          description: The date and time of available appointment
          format: date-time
        length:
          type: integer
          format: int32
          description: Appointment length in minutes
        webCode:
          type: string
          description: Web code which can be used to fetch data about the appointment or cancel it
        description:
          $ref: "#/components/schemas/LocalizedValue"
        roomName:
          $ref: "#/components/schemas/LocalizedValue"
        roomNumber:
          type: string
          description: Appointment room number
        alwaysCheckIn:
          type: boolean
          description: true if it is mandatory to sign up for the appointment at the desk
        visited:
          type: boolean
          description: true if the appoinemtment was visited

    AppointmentStatus:
      type: string
      enum:
        - AVAILABLE
        - LOCKED
        - RESERVED

    Prescription:
      type: object
      description: Prescription object
      required:
        - prescriptionDate
        - validUntil
      properties:
        prescriptionDate:
          type: string
          format: date
          description: Prescription date
        prescriber:
          $ref: "#/components/schemas/Practitioner"
        description:
          type: string
          description: Prescription description
        secondDescription:
          type: string
          description: Second prescription description
        validUntil:
          type: string
          format: date
          description: Valid until date

    Vaccination:
      type: object
      description: Vaccination data
      properties:
        vaccinationDate:
          type: string
          format: date
          description: Date when vaccination was given
        vaccinationName:
          type: string
          description: Name of vaccination
        validUntil:
          type: string
          format: date
          description: Until which date vaccination is valid
        vaccinator:
          type: string
          description: The user who administered vaccination
        vaccinationSite:
          type: string
          description: Location of vaccination on the body
        vaccinationMethod:
          type: string
          description: Vaccination method
        vaccineCode:
          type: string
          description: Vaccine code
        vaccineATCCode:
          type: string
          description: Vaccine ATC code
        vaccineSeries:
          type: string
          description: Vaccine series
        vaccineBatch:
          type: string
          description: Vaccine batch
        vaccineDosage:
          type: number
          format: double
          description: Vaccine dosage

    AppointmentArrival:
      type: object
      description: Information for patient arrival for the appointment
      required:
        - clinicId
        - roomName
        - roomArrivalInfo
      properties:
        clinicName:
          type: string
          description: Clinic name
        clinicAddress:
          $ref: "#/components/schemas/Address"
        roomName:
          $ref: "#/components/schemas/LocalizedValue"
          description: Room name
        roomArrivalInfo:
          $ref: string
          description: Arrival information for room

